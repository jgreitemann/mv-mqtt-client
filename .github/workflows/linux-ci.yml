name: Linux CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-ci
  CARGO_TERM_COLOR: always

jobs:
  check-docker:
    runs-on: ubuntu-latest
    outputs:
      updated: ${{ contains(steps.changed-files.outputs.modified_files, 'Dockerfile') }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v18.7

  update-docker:
    runs-on: ubuntu-latest
    needs: check-docker
    if: fromJSON(needs.check-docker.outputs.updated)

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outpus.labels }}

  build-linux:
    runs-on: ubuntu-latest
    needs: [update-docker]
    if: ${{ always() }}

    container:
      image: ghcr.io/${{ github.repository }}-ci:${{ github.ref_name }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.github_token }}

    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: cargo build --release --verbose

      - name: Run tests
        run: cargo test --release --verbose
